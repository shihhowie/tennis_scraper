{"ast":null,"code":"var _jsxFileName = \"/Users/howardshih/Projects/tennis_scraper/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid'; // Import timeGridPlugin\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/availability\").then(response => {\n      const formattedEvents = response.data.map(item => ({\n        title: item.court.split(\"_\").join(\" \"),\n        start: `${item.date}T${String(item.start).padStart(2, '0')}:00:00`,\n        end: `${item.date}T${String(item.end).padStart(2, '0')}:00:00`,\n        backgroundColor: item.slots > 0 ? \"green\" : \"red\"\n      }));\n      setEvents(formattedEvents);\n    });\n  }, []);\n  const renderEventContent = eventInfo => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '0.75em',\n        lineHeight: '1em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: eventInfo.timeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tennis Court Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin] // Use both plugins\n      ,\n      initialView: \"timeGridWeek\" // Set to monthly view\n      ,\n      events: events,\n      slotMinTime: \"00:00:00\" // Start the grid at midnight\n      ,\n      slotMaxTime: \"24:00:00\" // End the grid at midnight of the next day\n      ,\n      eventTimeFormat: {\n        hour: '2-digit',\n        minute: '2-digit',\n        meridiem: false // Use 24-hour format\n      } // Show time details for events\n      ,\n      eventDisplay: \"block\" // Ensure events are displayed as blocks\n      ,\n      eventContent: renderEventContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","axios","jsxDEV","_jsxDEV","App","_s","events","setEvents","get","then","response","formattedEvents","data","map","item","title","court","split","join","start","date","String","padStart","end","backgroundColor","slots","renderEventContent","eventInfo","style","fontSize","lineHeight","children","timeText","fileName","_jsxFileName","lineNumber","columnNumber","event","plugins","initialView","slotMinTime","slotMaxTime","eventTimeFormat","hour","minute","meridiem","eventDisplay","eventContent","_c","$RefreshReg$"],"sources":["/Users/howardshih/Projects/tennis_scraper/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid'; // Import timeGridPlugin\nimport axios from 'axios';\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/api/availability\").then(response => {\n      const formattedEvents = response.data.map(item => ({\n        title: item.court.split(\"_\").join(\" \"),\n        start: `${item.date}T${String(item.start).padStart(2, '0')}:00:00`,\n        end: `${item.date}T${String(item.end).padStart(2, '0')}:00:00`,\n        backgroundColor: item.slots>0 ? \"green\" : \"red\"\n      }));\n      setEvents(formattedEvents);\n    });\n  }, []);\n\n  const renderEventContent = (eventInfo) => {\n    return (\n      <div style={{ fontSize: '0.75em', lineHeight: '1em' }}>\n        <b>{eventInfo.timeText}</b>\n        <i>{eventInfo.event.title}</i>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h1>Tennis Court Availability</h1>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin]} // Use both plugins\n        initialView=\"timeGridWeek\" // Set to monthly view\n        events={events}\n        slotMinTime=\"00:00:00\" // Start the grid at midnight\n        slotMaxTime=\"24:00:00\" // End the grid at midnight of the next day\n        eventTimeFormat={{\n          hour: '2-digit',\n          minute: '2-digit',\n          meridiem: false, // Use 24-hour format\n        }} // Show time details for events\n        eventDisplay=\"block\" // Ensure events are displayed as blocks\n        eventContent={renderEventContent}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}