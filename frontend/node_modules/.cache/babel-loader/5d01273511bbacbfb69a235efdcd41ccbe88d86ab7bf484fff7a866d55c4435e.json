{"ast":null,"code":"var _jsxFileName = \"/Users/howardshih/Projects/tennis_scraper/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid'; // Import timeGridPlugin\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/availability\").then(response => {\n      const formattedEvents = response.data.map(item => ({\n        title: item.court.split(\"_\").join(\" \"),\n        start: `${item.date}T${String(item.start).padStart(2, '0')}:00:00`,\n        end: `${item.date}T${String(item.end).padStart(2, '0')}:00:00`,\n        backgroundColor: item.slots > 0 ? \"green\" : \"red\",\n        className: 'half-width-event' // Add custom class to events\n      }));\n      setEvents(formattedEvents);\n    });\n  }, []);\n  const renderEventContent = eventInfo => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.8em',\n          fontWeight: 'bold'\n        },\n        children: eventInfo.timeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.8em'\n        },\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  };\n  const handleEventClassNames = arg => {\n    // Detect overlapping events manually\n    const eventStart = new Date(arg.event.start).getTime();\n    const eventEnd = new Date(arg.event.end).getTime();\n    const isOverlapping = events.some(e => {\n      const otherStart = new Date(e.start).getTime();\n      const otherEnd = new Date(e.end).getTime();\n      return e.title !== arg.event.title && (\n      // Exclude the current event\n      eventStart >= otherStart && eventStart < otherEnd ||\n      // Overlaps at the start\n      eventEnd > otherStart && eventEnd <= otherEnd ||\n      // Overlaps at the end\n      eventStart <= otherStart && eventEnd >= otherEnd) // Fully overlaps\n      ;\n    });\n\n    // Apply the 'half-width-event' class to all overlapping events\n    return isOverlapping ? ['overlap-event'] : [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tennis Court Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin] // Use both plugins\n      ,\n      initialView: \"timeGridWeek\" // Set to monthly view\n      ,\n      events: events,\n      slotMinTime: \"00:00:00\" // Start the grid at midnight\n      ,\n      slotMaxTime: \"24:00:00\" // End the grid at midnight of the next day\n      ,\n      eventTimeFormat: {\n        hour: '2-digit',\n        meridiem: false // Use 24-hour format\n      } // Show time details for events\n      ,\n      eventDisplay: \"block\" // Ensure events are displayed as blocks\n      ,\n      eventContent: renderEventContent,\n      eventClassNames: handleEventClassNames,\n      eventOverlap: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","axios","jsxDEV","_jsxDEV","App","_s","events","setEvents","get","then","response","formattedEvents","data","map","item","title","court","split","join","start","date","String","padStart","end","backgroundColor","slots","className","renderEventContent","eventInfo","children","style","fontSize","fontWeight","timeText","fileName","_jsxFileName","lineNumber","columnNumber","event","handleEventClassNames","arg","eventStart","Date","getTime","eventEnd","isOverlapping","some","e","otherStart","otherEnd","plugins","initialView","slotMinTime","slotMaxTime","eventTimeFormat","hour","meridiem","eventDisplay","eventContent","eventClassNames","eventOverlap","_c","$RefreshReg$"],"sources":["/Users/howardshih/Projects/tennis_scraper/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid'; // Import timeGridPlugin\nimport axios from 'axios';\nimport './App.css'\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/api/availability\").then(response => {\n      const formattedEvents = response.data.map(item => ({\n        title: item.court.split(\"_\").join(\" \"),\n        start: `${item.date}T${String(item.start).padStart(2, '0')}:00:00`,\n        end: `${item.date}T${String(item.end).padStart(2, '0')}:00:00`,\n        backgroundColor: item.slots>0 ? \"green\" : \"red\",\n        className: 'half-width-event' // Add custom class to events\n      }));\n      setEvents(formattedEvents);\n    });\n  }, []);\n\n  const renderEventContent = (eventInfo) => {\n    return (\n      <div>\n        <div style={{ fontSize: '0.8em', fontWeight: 'bold' }}>{eventInfo.timeText}</div>\n        <div style={{ fontSize: '0.8em' }}>{eventInfo.event.title}</div>\n      </div>\n    );\n  };\n  \n  const handleEventClassNames = (arg) => {\n    // Detect overlapping events manually\n    const eventStart = new Date(arg.event.start).getTime();\n    const eventEnd = new Date(arg.event.end).getTime();\n  \n    const isOverlapping = events.some((e) => {\n      const otherStart = new Date(e.start).getTime();\n      const otherEnd = new Date(e.end).getTime();\n      return (\n        e.title !== arg.event.title && // Exclude the current event\n        ((eventStart >= otherStart && eventStart < otherEnd) || // Overlaps at the start\n          (eventEnd > otherStart && eventEnd <= otherEnd) || // Overlaps at the end\n          (eventStart <= otherStart && eventEnd >= otherEnd)) // Fully overlaps\n      );\n    });\n  \n    // Apply the 'half-width-event' class to all overlapping events\n    return isOverlapping ? ['overlap-event'] : [];\n  };\n\n  return (\n    <div>\n      <h1>Tennis Court Availability</h1>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin]} // Use both plugins\n        initialView=\"timeGridWeek\" // Set to monthly view\n        events={events}\n        slotMinTime=\"00:00:00\" // Start the grid at midnight\n        slotMaxTime=\"24:00:00\" // End the grid at midnight of the next day\n        eventTimeFormat={{\n          hour: '2-digit',\n          meridiem: false, // Use 24-hour format\n        }} // Show time details for events\n        eventDisplay=\"block\" // Ensure events are displayed as blocks\n        eventContent={renderEventContent}\n        eventClassNames={handleEventClassNames}\n        eventOverlap={true}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}