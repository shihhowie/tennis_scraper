{"ast":null,"code":"var _jsxFileName = \"/Users/howardshih/Projects/tennis_scraper/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport resourceTimeGridPlugin from '@fullcalendar/resource-timegrid'; // Import resourceTimeGridPlugin\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [resources, setResources] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/availability\").then(response => {\n      const formattedEvents = response.data.map(item => ({\n        title: item.court.split(\"_\").join(\" \"),\n        start: `${item.date}T${String(item.start).padStart(2, '0')}:00:00`,\n        end: `${item.date}T${String(item.end).padStart(2, '0')}:00:00`,\n        resourceId: item.court,\n        // Assign each event to a court (resource)\n        backgroundColor: item.slots > 0 ? \"green\" : \"red\"\n      }));\n\n      // Extract unique courts as resources\n      const uniqueCourts = [...new Set(response.data.map(item => item.court))];\n      const formattedResources = uniqueResources.map(resource => {\n        const [date, court] = resource.split(\"_\");\n        return {\n          id: resource,\n          title: `${date} - ${court.split(\"_\").join(\" \")}` // Display date and court\n        };\n      });\n      setResources(formattedResources);\n      setEvents(formattedEvents);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tennis Court Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, resourceTimeGridPlugin] // Add resourceTimeGridPlugin\n      ,\n      initialView: \"resourceTimeGridWeek\",\n      events: events,\n      resources: resources // Pass resources to the calendar\n      ,\n      eventTimeFormat: {\n        hour: '2-digit',\n        minute: '2-digit',\n        meridiem: false // Use 24-hour format\n      },\n      eventDisplay: \"block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FzBVfjElVgfIFtshJXMCjhamkX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","resourceTimeGridPlugin","axios","jsxDEV","_jsxDEV","App","_s","events","setEvents","resources","setResources","get","then","response","formattedEvents","data","map","item","title","court","split","join","start","date","String","padStart","end","resourceId","backgroundColor","slots","uniqueCourts","Set","formattedResources","uniqueResources","resource","id","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","eventTimeFormat","hour","minute","meridiem","eventDisplay","_c","$RefreshReg$"],"sources":["/Users/howardshih/Projects/tennis_scraper/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport resourceTimeGridPlugin from '@fullcalendar/resource-timegrid'; // Import resourceTimeGridPlugin\nimport axios from 'axios';\n\nconst App = () => {\n  const [events, setEvents] = useState([]);\n  const [resources, setResources] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/api/availability\").then(response => {\n      const formattedEvents = response.data.map(item => ({\n        title: item.court.split(\"_\").join(\" \"),\n        start: `${item.date}T${String(item.start).padStart(2, '0')}:00:00`,\n        end: `${item.date}T${String(item.end).padStart(2, '0')}:00:00`,\n        resourceId: item.court, // Assign each event to a court (resource)\n        backgroundColor: item.slots > 0 ? \"green\" : \"red\"\n      }));\n\n      // Extract unique courts as resources\n      const uniqueCourts = [...new Set(response.data.map(item => item.court))];\n      const formattedResources = uniqueResources.map(resource => {\n        const [date, court] = resource.split(\"_\");\n        return {\n          id: resource,\n          title: `${date} - ${court.split(\"_\").join(\" \")}` // Display date and court\n        };\n      });\n\n      setResources(formattedResources);\n      setEvents(formattedEvents);\n      \n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Tennis Court Availability</h1>\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, resourceTimeGridPlugin]} // Add resourceTimeGridPlugin\n        initialView=\"resourceTimeGridWeek\"\n        events={events}\n        resources={resources} // Pass resources to the calendar\n        eventTimeFormat={{\n          hour: '2-digit',\n          minute: '2-digit',\n          meridiem: false, // Use 24-hour format\n        }}\n        eventDisplay=\"block\"\n      />\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}